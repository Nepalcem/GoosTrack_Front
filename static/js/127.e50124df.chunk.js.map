{"version":3,"file":"static/js/127.e50124df.chunk.js","mappings":"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","sources":["images/svg/log-in.svg","components/RegisterForm/RegisterForm.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/RegisterForm/RegisterForm.jsx","components/RegisterForm/RegisterPage.styled.jsx","pages/RegisterPage.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogIn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"log-in-01\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.5263,\n    d: \"M19.789 4.632h1.516c2.122 0 3.183 0 3.994 0.413 0.713 0.363 1.293 0.943 1.656 1.656 0.413 0.811 0.413 1.872 0.413 3.994v10.611c0 2.122 0 3.183-0.413 3.994-0.363 0.713-0.943 1.293-1.656 1.656-0.811 0.413-1.872 0.413-3.994 0.413h-1.516M13.474 9.684l6.316 6.316M19.789 16l-6.316 6.316M19.789 16h-15.158\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogIn);\nexport default __webpack_public_path__ + \"static/media/log-in.2932cac4679b0dc8397f44a1c8040c57.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nimport {\n  Field as FormikField,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nimport { ReactSVG } from 'react-svg';\nimport {\n  blackcolor,\n  lightBlueColor,\n  primaryColor,\n  whiteColor,\n} from 'utils/variables';\n\nexport const SignUpIcon = styled(ReactSVG)`\n  stroke: white;\n  width: 18px;\n  height: 18px;\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  width: 335px;\n  padding: 40px 24px;\n\n  background-color: ${whiteColor};\n  border-radius: 8px;\n\n  margin-bottom: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  color: ${primaryColor};\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: Inter;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.33333;\n\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 24px;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 18px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  color: ${blackcolor};\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  margin-bottom: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  &.is-valid {\n    color: #3cbc81;\n  }\n  &.is-invalid {\n    color: #FF0000;\n  }\n`;\n\nexport const Field = styled(FormikField)`\n  width: 100%;\n  /* height: 46px; */\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  background: ${whiteColor};\n  padding: 14px;\n  outline: none;\n\n  color: ${blackcolor};\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.28571;\n\n  &::placeholder {\n    color: ${lightBlueColor};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: 16px;\n    line-height: 1.125;\n  }\n\n  &.is-valid {\n    border-radius: 8px;\n    border: 1px solid rgb(60, 188, 129);\n  }\n\n  &.is-invalid {\n    border-radius: 8px;\n    border: 1px solid rgb(231, 74, 59);\n  }\n`;\nexport const TextShow = styled.span`\n  // display: flex;\n  color: #3e85f3;\n  cursor: pointer;\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  position: absolute;\n  top: 43px;\n\n  right: 20px;\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  margin-left: 18px;\n  margin-top: 8px;\n\n  color: #FF0000;\n`;\n\n","import styled from 'styled-components';\nimport { primaryColor, whiteColor } from 'utils/variables';\n\nexport const ButtonStyled = styled.button`\n  cursor: pointer;\n\n  padding-top: 14px;\n  padding-bottom: 14px;\n\n  margin-top: 8px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 11px;\n\n  border-width: 0;\n  border-radius: 16px;\n  background-color: ${primaryColor};\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  color: ${whiteColor};\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.28571;\n  letter-spacing: -0.28px;\n\n  transition: background-color 250ms linear;\n\n  &:hover {\n    background-color: ${primaryColor};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 16px;\n    padding-bottom: 16px;\n\n    margin-top: 48px;\n\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\nimport { ButtonStyled } from './Button.styled';\nexport const Button = ({\n  textButton,\n  type,\n  width = '100%',\n  height = '',\n  svg,\n}) => {\n  return (\n    <div>\n      <ButtonStyled\n        type={type}\n        style={{\n          width,\n          height,\n        }}\n      >\n        {textButton}\n        {svg}\n      </ButtonStyled>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n// Стилізовані компоненти\nimport {\n  ErrorMessage,\n  FormContainer,\n  FormTitle,\n  InputContainer,\n  Label,\n  Field,\n  SignUpIcon,\n  TextShow,\n} from './RegisterForm.styled';\nimport SignUpSVG from '../../images/svg/log-in.svg';\n\n// Бібліотека формік\nimport { Formik, Form } from 'formik';\n\n// Бібліотека валідації форми yup\nimport * as yup from 'yup';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\n\n// Схма валідації форми!!!!!!\n// ПЕРЕВІРИТИ ШОБ ЗБІГАЛАСЬ З БЕКЕНДОМ\n// https://www.npmjs.com/package/yup\nconst schema = yup.object().shape({\n  name: yup.string().required().matches().min(4).max(16),\n  email: yup\n    .string()\n    .email()\n    .matches(\n      /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n      'Email must contain only Latin characters'\n    )\n    .required(),\n  password: yup\n    .string()\n    .required()\n    .matches(\n      /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n      'Password requires min 8 characters long, one UPPERCASE, one lowercase letter'\n    )\n    .min(8),\n});\n\n//  Компонент форми\nconst RegisterForm = () => {\n  // початкові значення полів форми\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const togglePassword = () => {\n    // When the handler is invoked\n    // inverse the boolean state of passwordShown\n    setPasswordShown(!passwordShown);\n  };\n  // Обробник сабміту\n  const handleSubmit = (values, actions) => {\n    console.log('values', values);\n    const { name, email, password } = values;\n    dispatch(authOperations.register({ username: name, email, password }));\n    // у обʼєкт values повертаються дані з форми\n    // тут буде проходити реєстрація\n    actions.resetForm();\n  };\n\n  return (\n    <FormContainer>\n      <FormTitle>Sign Up</FormTitle>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        {({ errors, touched }) => {\n          const isValid = field =>\n            touched[field] && errors[field]\n              ? 'is-invalid'\n              : touched[field]\n              ? 'is-valid'\n              : '';\n          return (\n            <Form autoComplete=\"off\">\n              <InputContainer>\n                <Label htmlFor=\"name\" className={isValid('name')}>\n                  Name\n                </Label>\n\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Enter your name\"\n                  className={isValid('name')}\n                />\n\n                <ErrorMessage name=\"name\" component=\"div\" />\n              </InputContainer>\n\n              <InputContainer>\n                <Label htmlFor=\"email\" className={isValid('email')}>\n                  Email\n                </Label>\n\n                <Field\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  className={isValid('email')}\n                />\n\n                <ErrorMessage name=\"email\" component=\"div\" />\n              </InputContainer>\n\n              <InputContainer>\n                <Label htmlFor=\"name\" className={isValid('password')}>\n                  Password\n                </Label>\n                <Field\n                  // type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Enter password\"\n                  type={passwordShown ? 'text' : 'password'}\n                  className={isValid('password')}\n                />\n                <TextShow onClick={togglePassword}>\n                  {passwordShown ? 'Hide' : 'Show'}\n                </TextShow>\n\n                <ErrorMessage name=\"password\" component=\"div\" />\n              </InputContainer>\n\n              <Button\n                textButton=\"Sign Up\"\n                type=\"submit\"\n                svg={<SignUpIcon src={SignUpSVG} />}\n              ></Button>\n            </Form>\n          );\n        }}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport goose_1x from 'images/signUpPageImg/desktop_signupPage.png';\nimport goose_2x from 'images/signUpPageImg/desktop_signupPage@2x.png';\n\nexport const StyledLink = styled(Link)`\n  color: #3e85f3;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.16667;\n  text-decoration-line: underline;\n  \n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33333;\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  background-color: #dcebf7;\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  margin-top: 30px;\n  margin-bottom: 30px;\n\n  background-color: #dcebf7;\n`;\n\nexport const ImgWrapper = styled.div`\n  position: absolute;\n  width: 400px;\n  height: 416px;\n  left: 49px;\n  bottom: 0;\n\n  background-image: url(${goose_1x});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  @media screen and (min-device-pixel-ratio: 2) {\n    background-image: url(${goose_2x});\n  }\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n`;\n","import React from 'react';\n\nimport  RegisterForm  from 'components/RegisterForm/RegisterForm';\nimport {\n  Container,\n  FormWrapper,\n  ImgWrapper,\n  StyledLink,\n} from '../components/RegisterForm/RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <Container>\n      <FormWrapper>\n        <RegisterForm />\n        <StyledLink to=\"/login\">Log In</StyledLink>\n      </FormWrapper>\n\n      <ImgWrapper />\n    </Container>\n  );\n};\n\nexport default RegisterPage;"],"names":["SignUpIcon","styled","ReactSVG","FormContainer","whiteColor","FormTitle","primaryColor","InputContainer","Label","blackcolor","Field","FormikField","lightBlueColor","TextShow","ErrorMessage","FormikErrorMessage","ButtonStyled","Button","textButton","type","width","height","svg","style","schema","yup","shape","name","required","matches","min","max","email","password","useState","passwordShown","setPasswordShown","dispatch","useDispatch","togglePassword","initialValues","onSubmit","values","actions","console","log","authOperations","username","resetForm","validationSchema","errors","touched","isValid","field","autoComplete","htmlFor","className","placeholder","component","onClick","src","SignUpSVG","StyledLink","Link","Container","FormWrapper","ImgWrapper","goose_1x","goose_2x","to"],"sourceRoot":""}