{"version":3,"file":"static/js/145.f312e510.chunk.js","mappings":"gPAOaA,EAAgBC,EAAAA,GAAAA,IAAH,mQAgBbC,EAAYD,EAAAA,GAAAA,GAAH,2ZAmBTE,EAAiBF,EAAAA,GAAAA,IAAH,oJASdG,EAAQH,EAAAA,GAAAA,MAAH,qWAuBLI,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,iqBAsCLM,EAASN,EAAAA,GAAAA,OAAH,+6BAsDNO,EAAWP,EAAAA,GAAAA,KAAH,oXA0BRQ,GAAeR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,gM,uCCxKnBU,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJE,QACAC,QACC,wEACA,4CAEDC,WACHC,SAAUL,EAAAA,KAEPI,WACAD,QACC,oEACA,gFAEDG,IAAI,KA0GT,EAtGkB,WAGhB,OAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiB,WAGrBH,GAAkBD,EACnB,EAWD,OACE,UAACpB,EAAD,YACE,SAACE,EAAD,UAAW,YACX,SAAC,KAAD,CACEuB,cAAe,CAAEX,MAAO,GAAIG,SAAU,IACtCS,SAbe,SAACC,EAAQC,GAC5BN,EAASO,EAAAA,EAAAA,MAAqBF,IAE9BG,QAAQC,IAAI,SAAUJ,EAGvB,EAQKK,iBAAkBrB,EAHpB,SAKG,YAA0B,IAAvBsB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACJC,EAAU,SAAAC,GAAK,OACnBF,EAAQE,IAAUH,EAAOG,GACrB,aACAF,EAAQE,GACR,WACA,EALe,EAMrB,OACE,UAAC,KAAD,CAAMC,aAAa,MAAnB,WACE,UAAClC,EAAD,YACE,SAACC,EAAD,CAAOkC,QAAQ,QAAQC,UAAWJ,EAAQ,SAA1C,SAAoD,WAIpD,SAAC9B,EAAD,CACEmC,KAAK,QACLC,KAAK,QACLC,YAAY,cACZH,UAAWJ,EAAQ,YAGrB,SAAC1B,EAAD,CAAcgC,KAAK,QAAQE,UAAU,YAGvC,UAACxC,EAAD,YACE,SAACC,EAAD,CAAOkC,QAAQ,OAAOC,UAAWJ,EAAQ,YAAzC,SAAsD,cAItD,SAAC9B,EAAD,CAEEoC,KAAK,WACLC,YAAY,iBACZF,KAAMpB,EAAgB,OAAS,WAC/BmB,UAAWJ,EAAQ,eAGrB,SAAC3B,EAAD,CAAUgC,KAAK,SAASI,QAASpB,EAAjC,SACGJ,EAAgB,OAAS,UAG5B,SAACX,EAAD,CAAcgC,KAAK,WAAWE,UAAU,YAG1C,UAACpC,EAAD,CACEiC,KAAK,SADP,UAGC,UAEC,gBACEK,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OALP,UAOE,iBACEC,EAAE,+UACFC,OAAO,QACPC,YAAY,IACZC,cAAc,QACdC,eAAe,iBAM1B,MAIR,E,6IC1IYC,GAAatD,EAAAA,EAAAA,IAAOuD,EAAAA,GAAPvD,CAAH,ocAqBVwD,EAAYxD,EAAAA,GAAAA,IAAH,sMAWTyD,EAAczD,EAAAA,GAAAA,IAAH,uNAYX0D,EAAa1D,EAAAA,GAAAA,IAAH,8YAOG2D,EAMEC,GCvC5B,EAdkB,WAChB,OACE,UAACJ,EAAD,YACE,UAACC,EAAD,YACE,SAAC,EAAD,KACA,SAACH,EAAD,CAAYO,GAAG,YAAf,SAA2B,gBAI7B,SAACH,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","components/LoginForm/LoginPage.styled.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport {\n  Field as FormikField,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const FormContainer = styled.div`\n  width: 335px;\n  padding: 40px 24px;\n\n  background-color: #ffffff;\n  border-radius: 8px;\n\n  margin-bottom: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  color: #3e85f3;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: Inter;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.33333;\n\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 24px;\n  position: relative;\n  \n  @media screen and (min-width: 768px) {\n    margin-bottom: 18px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  color: #111111;\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  margin-bottom: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  &.is-valid {\n    color: #3cbc81;\n  }\n  &.is-invalid {\n    color: #FF0000;\n  }\n`;\n\nexport const Field = styled(FormikField)`\n  width: 100%;\n  /* height: 46px; */\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  background: #ffffff;\n  padding: 14px;\n  outline: none;\n\n  color: #111111;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.28571;\n\n  &::placeholder {\n    color: #dce3e5;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: 16px;\n    line-height: 1.125;\n  }\n\n  &.is-valid {\n    border-radius: 8px;\n    border: 1px solid rgb(60, 188, 129);\n  }\n\n  &.is-invalid {\n    border-radius: 8px;\n    border: 1px solid rgb(231, 74, 59);\n  }\n\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 100%;\n  padding-top: 14px;\n  padding-bottom: 14px;\n\n  margin-top: 8px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 11px;\n\n  border-width: 0;\n  border-radius: 16px;\n  background-color: #3e85f3;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  color: #ffffff;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.28571;\n  letter-spacing: -0.28px;\n\n  transition: background-color 250ms linear;\n\n  &:hover {\n    background-color: #2b78ef;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 16px;\n    padding-bottom: 16px;\n\n    margin-top: 48px;\n\n    font-size: 18px;\n  }\n\n\n  &.is-valid {\n    border-radius: 8px;\n    border: 1px solid rgb(60, 188, 129);\n  }\n\n  &.is-invalid {\n    border-radius: 8px;\n    border: 1px solid rgb(231, 74, 59);\n  }\n`;\n\n\nexport const TextShow = styled.span`\n  // display: flex;\n  color: #3e85f3;\n  cursor: pointer;\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  position: absolute;\n  top: 43px;\n\n  right: 20px;\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\n\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  margin-left: 18px;\n  margin-top: 8px;\n\n  color: #FF0000;\n\n  // border-radius: 8px;\n  // border: 1px solid rgba(220, 227, 229, 0.6);\n  // background: #FF0000;\n`;\n\n\n\n\n\n","import React, { useState } from 'react';\n// Стилізовані компоненти\nimport {\n  ErrorMessage,\n  FormContainer,\n  FormTitle,\n  InputContainer,\n  Label,\n  Field,\n  Button,\n  TextShow,\n} from './LoginForm.styled';\n\n// Бібліотека формік\nimport { Formik, Form } from 'formik';\n\n// Бібліотека валідації форми yup\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\n\n// Схма валідації форми!!!!!!\n// ПЕРЕВІРИТИ ШОБ ЗБІГАЛАСЬ З БЕКЕНДОМ\n// https://www.npmjs.com/package/yup\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email()\n    .matches(\n      /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n      'Email must contain only Latin characters'\n    )\n    .required(),\n  password: yup\n    .string()\n    .required()\n    .matches(\n      /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n      'Password requires min 8 characters long, one UPPERCASE, one lowercase letter'\n    )\n    .min(8),\n});\n\n//  Компонент форми\nconst LoginForm = () => {\n  // початкові значення полів форми\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const dispatch = useDispatch();\n\n  const togglePassword = () => {\n    // When the handler is invoked\n    // inverse the boolean state of passwordShown\n    setPasswordShown(!passwordShown);\n  };\n\n  // Обробник сабміту\n  const handleSubmit = (values, actions) => {\n    dispatch(authOperations.logIn(values));\n    // у обʼєкт values повертаються дані з форми\n    console.log('values', values);\n    // тут буде проходити реєстрація\n    // actions.resetForm();\n  };\n\n  return (\n    <FormContainer>\n      <FormTitle>Log In</FormTitle>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        {({ errors, touched }) => {\n          const isValid = field =>\n            touched[field] && errors[field]\n              ? 'is-invalid'\n              : touched[field]\n              ? 'is-valid'\n              : '';\n          return (\n            <Form autoComplete=\"off\">\n              <InputContainer>\n                <Label htmlFor=\"email\" className={isValid('email')}>\n                  Email\n                </Label>\n\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  className={isValid('email')}\n                />\n\n                <ErrorMessage name=\"email\" component=\"div\" />\n              </InputContainer>\n\n              <InputContainer>\n                <Label htmlFor=\"name\" className={isValid('password')}>\n                  Password\n                </Label>\n\n                <Field\n                  // type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Enter password\"\n                  type={passwordShown ? 'text' : 'password'}\n                  className={isValid('password')}\n                />\n\n                <TextShow type=\"submit\" onClick={togglePassword}>\n                  {passwordShown ? 'Hide' : 'Show'}\n                </TextShow>\n\n                <ErrorMessage name=\"password\" component=\"div\" />\n              </InputContainer>\n\n              <Button\n                type=\"submit\"\n                // disabled={!isValid}\n              >\n                Log In\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"none\"\n                >\n                  <path\n                    d=\"M12.5 2.5H13.5C14.9001 2.5 15.6002 2.5 16.135 2.77248C16.6054 3.01217 16.9878 3.39462 17.2275 3.86502C17.5 4.3998 17.5 5.09987 17.5 6.5V13.5C17.5 14.9001 17.5 15.6002 17.2275 16.135C16.9878 16.6054 16.6054 16.9878 16.135 17.2275C15.6002 17.5 14.9001 17.5 13.5 17.5H12.5M8.33333 5.83333L12.5 10M12.5 10L8.33333 14.1667M12.5 10L2.5 10\"\n                    stroke=\"white\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                </svg>\n              </Button>\n            </Form>\n          );\n        }}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport goose_1x from 'images/loginPageImg/desktop_loginPage.png';\nimport goose_2x from 'images/loginPageImg/desktop_loginPage@2x.png';\n\nexport const StyledLink = styled(Link)`\n  color: #3e85f3;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.16667;\n  text-decoration-line: underline;\n  \n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33333;\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #dcebf7;\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  margin-top: 30px;\n  margin-bottom: 30px;\n\n  background-color: #dcebf7;\n`;\n\nexport const ImgWrapper = styled.div`\n  position: absolute;\n  width: 368px;\n  height: 521px;\n  right: 60px;\n  bottom: 19px;\n\n  background-image: url(${goose_1x});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  @media screen and (min-device-pixel-ratio: 2) {\n    background-image: url(${goose_2x});\n  }\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n`;\n","import React from 'react';\n\nimport LoginForm  from 'components/LoginForm/LoginForm';\nimport {\n    Container,\n    FormWrapper,\n    ImgWrapper,\n    StyledLink,\n} from '../components/LoginForm/LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <FormWrapper>\n        <LoginForm />\n        <StyledLink to=\"/register\">Sign up</StyledLink>\n      </FormWrapper>\n\n\n      <ImgWrapper />\n    </Container>\n  );\n};\n\nexport default LoginPage;"],"names":["FormContainer","styled","FormTitle","InputContainer","Label","Field","FormikField","Button","TextShow","ErrorMessage","FormikErrorMessage","schema","yup","shape","email","matches","required","password","min","useState","passwordShown","setPasswordShown","dispatch","useDispatch","togglePassword","initialValues","onSubmit","values","actions","authOperations","console","log","validationSchema","errors","touched","isValid","field","autoComplete","htmlFor","className","type","name","placeholder","component","onClick","xmlns","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","StyledLink","Link","Container","FormWrapper","ImgWrapper","goose_1x","goose_2x","to"],"sourceRoot":""}