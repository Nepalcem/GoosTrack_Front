{"version":3,"file":"static/js/839.70c59dde.chunk.js","mappings":"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","sources":["images/accountPage/plus-tablet.svg","components/AccountPage/AccountPageLayout.styled.js","components/AccountPage/AccountForm.styled.js","components/AccountPage/DatePicker.styled.js","components/AccountPage/AccountPageLayout.jsx","pages/AccountPage.jsx"],"sourcesContent":["var _circle, _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlusTablet(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12,\n    cy: 12,\n    r: 12,\n    fill: \"#3E85F3\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 6.75V17.25\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.75 12H17.25\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlusTablet);\nexport default __webpack_public_path__ + \"static/media/plus-tablet.7f0e1687bbbbcdc12ab3890716d5ed3b.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const AccountPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: var(--color-btn-change-day);\n  \n  //  background-color: white;\n  border-radius: 16px;\n  align-items: center;\n  /* margin: 10px; */\n  margin-top: 95px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n  @media screen and (min-width: 768px) {\n    margin: 0px;\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 32px;\n  }\n\n  & .centered-element {\n  align-self: center;\n\n}\n`;\n\nexport const AccountPageAvatar = styled.img`\n  width: 72px;\n  border-radius: 50%;\n  @media screen and (min-width: 768px) {\n    width: 124px;\n  }\n  /* display: block; */\n  &:hover {\n    border: 2px solid #3e85f3;\n    cursor: pointer;\n    border-radius: 50%;\n  }\n`;\n\nexport const UserAvatarPlus = styled.div`\n  position: relative;\n  \n  @media screen and (max-width: 767px) {\n    transform: translateY(-50%);\n  }\n`;\n\nexport const AccountAvatarPlusIcon = styled.img`\n  position: absolute;\n  top: 85%;\n  left: 65%;\n  &:hover {\n    border: 1px solid #3e85f3;\n    cursor: pointer;\n    border-radius: 50%;\n  }\n  @media screen and (max-width: 767px) {\n    width: 12px;\n  }\n`;\n\nexport const AccountUserName = styled.div`\n  color: var(--color-title-profil);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (max-width: 767px) {\n    transform: translateY(-50%);\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 14px;\n  }\n`;\n\nexport const AccountUserNameTitle = styled.div`\n  color: var(--color-name-user);\n  font-weight: 700;\n  font-size: 14px;\n  line-height: calc(18 / 14);\n  text-transform: capitalize;\n`;\nexport const AccountUserNameRole = styled.div`\n\n  font-weight: 600;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n`;\n","import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\nimport { primaryColor, whiteColor } from '../../utils/variables';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 1440px) {\n    flex-direction: column;\n    flex-wrap: wrap;\n    justify-content: center;\n    //centering submit button on desktop\n    .spacer {\n      min-width: 354px;\n    }\n    /* &:last-child {\n      margin-top: 88px;\n    } */\n  }\n  @media screen and (min-width: 1024px) and (max-width: 1439px) {\n    .spacer {\n      display: none;\n    }\n  }\n\n  @media screen and (min-width: 1024px) {\n    width: 100%;\n  }\n\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n  }\n  margin: 18px;\n`;\n\nexport const FormTextInputs = styled.div`\n  @media screen and (min-width: 1024px) {\n    width: 100%;\n  }\n  label {\n    margin-top: 18px;\n  }\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 1024px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    & > :not(:last-child) {\n      margin-right: 50px;\n    }\n  }\n  align-items: center;\n`;\n\nexport const FormField = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  & input {\n    min-width: 300px;\n    @media screen and (min-width: 768px) {\n      min-width: 354px;\n      height: 46px;\n    }\n    padding: 12px 14px;\n    border-radius: 8px;\n    background-color: var(--color-btn-change-day);\n    color: var(--color-name-user);\n    border: 1px solid;\n    border-color: ${props =>\n      props.valid\n        ? '#3CBC81'\n        : props.error\n        ? '#DA1414'\n        : 'var(--color-border-profil);'};\n    font-family: Inter;\n    font-weight: 600;\n    font-size: 14px;\n    line-height: calc(18 / 14);\n    outline: none;\n  }\n  & input:focus {\n    border: 1px solid #111111;\n  }\n\n  & input.error {\n    border-color: #da1414;\n  }\n  & label {\n    font-size: 12px;\n    line-height: calc(14 / 12);\n    font-family: Inter;\n    color: ${props =>\n      props.valid\n        ? '#3CBC81'\n        : props.error\n        ? '#DA1414'\n        : 'var(--color-title-profil)'};\n  }\n`;\n\nexport const AccountSaveButton = styled.button`\n  cursor: pointer;\n  width: 195px;\n  padding: 14px 50px;\n\n\n  @media screen and (min-width: 768px) {\n    padding: 15px 83px;\n    width: 262px;\n    margin-top: 40px;\n  }\n  border-width: 0;\n  border-radius: 16px;\n  background-color: ${primaryColor};\n  color: ${whiteColor};\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: calc(18 / 14);\n  margin-top: 22px;\n\n  &:hover {\n    background-color: #2b78ef;\n  }\n  \n  @media screen and (min-width: 1024px) {\n    margin-top: 88px;\n  }\n  /* align-self: center; */\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  margin-left: 18px;\n  font-family: Inter;\n  font-size: 14px;\n  line-height: calc(14 / 12);\n  color: #da1414;\n`;\n","import 'react-datepicker/dist/react-datepicker.css';\nimport styled from 'styled-components';\n\n\n\n\nexport const CalendarGlobalStyles = styled.div`\n  .react-datepicker__wrapper {\n    position: relative;\n\n  }\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 327px;\n    height: 354px;\n    padding: 13px 0px 0px 0px;\n  background-color: #3e85f3;\n    font-family: Inter;\n    border-radius: 16px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n    width:100%;\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #3e85f3;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 16px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n  }\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today{\n    outline: none;\n    border: none;\n}\n  .react-datepicker__current-month {\n    font-family: Inter;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px;\n    text-align: center;\n    color: white;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n   padding: 8px 8px;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 18px;\n    text-align: center;\n    color: white;\n  }\n  .react-datepicker__navigation {\n    margin-top: 24px;\n    color: white;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    flex-shrink: 0;\n    margin: 0;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    color: white;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 12px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 16px 16px 0px 16px;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color:white;\n    color:#3e85f3;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n  background-color:white;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color:white;\n    color:#3e85f3;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color:white;\n    color:#3e85f3;\n  }\n  .react-datepicker__day--weekend {\n    opacity: 50%;\n  }\n.react-datepicker__day--outside-month {\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n  .react-datepicker__triangle {\n    visibility: hidden;\n  }\n`;\n\n","import React, { useEffect, useState } from 'react';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport defaultProfileAvatar from '../../images/accountPage/tablet-avatar-icon.png';\nimport userAvatarPlusIcon from '../../images/accountPage/plus-tablet.svg';\nimport {\n  AccountPageContainer,\n  AccountPageAvatar,\n  UserAvatarPlus,\n  AccountAvatarPlusIcon,\n  AccountUserName,\n  AccountUserNameTitle,\n  AccountUserNameRole,\n} from './AccountPageLayout.styled';\n\nimport { editTitle } from 'redux/title/titleSlice';\n\nimport { format, parseISO } from 'date-fns';\n\nimport {\n  StyledForm,\n  FormField,\n  AccountSaveButton,\n  ErrorMessageStyled,\n  FormTextInputs,\n} from './AccountForm.styled';\nimport DatePicker from 'react-datepicker';\nimport { CalendarGlobalStyles } from './DatePicker.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\n\n// const FileSize = 1024 * 1024; // 1MB\n\nconst userValidationSchema = Yup.object().shape({\n  // file: Yup.mixed()\n  //   .test(\n  //     'fileSize',\n  //     'File size is too large. Maximum size is 1MB.',\n  //     value => !value || (value && value.size <= FileSize)\n  //   )\n  //   .test(\n  //     'fileFormat',\n  //     'Only jpeg and png formats are supported.',\n  //     value => value && ['image/jpeg', 'image/png'].includes(value.type)\n  //   ),\n  username: Yup.string().required('User Name is required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Email is required')\n    .matches(\n      /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n      'Email must contain only Latin characters'\n    ),\n  birthday: Yup.string(),\n  //phone pattern .matches(/^[\\+]?3?[\\s]?8?[\\s]?\\(?0\\d{2}?\\)?[\\s]?\\d{3}[\\s|-]?\\d{2}[\\s|-]?\\d{2}$/, `Phone must contain valid characters`)\n  phone: Yup.string(),\n  skype: Yup.string(),\n});\n\nconst AccountPageLayout = () => {\n  const user = useSelector(state => state.auth.user);\n  const dispatch = useDispatch();\n  const [formattedBirthday, setFormattedBirthday] = useState('');\n\n  // Текст заголовку цієї сторінки\n  useEffect(() => {\n    dispatch(editTitle('User Profile'));\n  });\n\n  useEffect(() => {\n    // Check if user.birthday is available and format it\n    if (user.birthday) {\n      const formatted = format(parseISO(user.birthday), 'yyyy-MM-dd');\n      setFormattedBirthday(formatted);\n    }\n  }, [user.birthday]);\n\n  const submitHandler = (values, actions) => {\n\n    const formData = new FormData();\n\n    if (values.file) {\n      formData.append('avatarURL', values.file);\n    } else if (!user.avatarURL) {\n      const defaultAvatarBlob = new Blob([defaultProfileAvatar], {\n        type: 'image/png',\n      });\n      formData.append('avatarURL', defaultAvatarBlob);\n    }\n    formData.append('username', values.username);\n    formData.append('email', values.email);\n    formData.append('birthday', format(values.birthday, 'yyyy-MM-dd'));\n    formData.append('phone', values.phone);\n    formData.append('skype', values.skype);\n\n    dispatch(authOperations.patchCurrentUser(formData));\n  };\n\n  return (\n    <AccountPageContainer>\n      {/* <UserAvatarPlus>\n        <AccountPageAvatar\n          alt=\"Plus\"\n          src={user.avatar || defaultProfileAvatar}\n        />\n        <AccountAvatarPlusIcon src={userAvatarPlusIcon} />\n      </UserAvatarPlus> */}\n\n      <Formik\n        initialValues={{\n          file: null,\n          username: user.username,\n          birthday: formattedBirthday || new Date(),\n          email: user.email,\n          phone: user.phone || '+380931112233',\n          skype: user.skype || 'SkypeNumber',\n        }}\n        validationSchema={userValidationSchema}\n        onSubmit={submitHandler}\n      >\n        {({ values, errors, touched, setFieldValue }) => (\n          <StyledForm>\n            <div className=\"centered-element\">\n              {/* Hidden file input */}\n              <UserAvatarPlus>\n                <input\n                  id=\"fileInput\"\n                  type=\"file\"\n                  style={{ display: 'none' }}\n                  onChange={event => {\n                    setFieldValue('file', event.currentTarget.files[0]);\n                  }}\n                />\n                <label htmlFor=\"fileInput\">\n                  <AccountPageAvatar\n                    alt=\"Avatar\"\n                    src={\n                      values.file\n                        ? URL.createObjectURL(values.file)\n                        : user.avatarURL || defaultProfileAvatar\n                    }\n                  />\n                  <AccountAvatarPlusIcon src={userAvatarPlusIcon} />\n                </label>\n              </UserAvatarPlus>\n              <ErrorMessageStyled\n                name=\"fileInput\"\n                component=\"div\"\n                className=\"error-message\"\n              />\n\n              <AccountUserName>\n                <AccountUserNameTitle>{user.username}</AccountUserNameTitle>\n                <AccountUserNameRole>User</AccountUserNameRole>\n              </AccountUserName>\n            </div>\n\n            <FormTextInputs>\n              <FormField\n                error={errors.username}\n                valid={touched.username && !errors.username}\n              >\n                <label htmlFor=\"username\">User Name</label>\n                <Field\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  className={\n                    errors.username && touched.username\n                      ? 'error'\n                      : touched.username && !errors.username\n                      ? 'valid'\n                      : ''\n                  }\n                />\n                <ErrorMessageStyled\n                  name=\"username\"\n                  component=\"div\"\n                  className=\"error-message\"\n                />\n              </FormField>\n\n              <FormField>\n                <label htmlFor=\"birthday\">Birthday</label>\n                <Field name=\"birthday\">\n                  {({ field }) => (\n                    <>\n                      <CalendarGlobalStyles>\n                        <DatePicker\n                          {...field}\n                          calendarStartDay={1}\n                          // selected={values.birthday}\n                          // selected={field.value}\n                          selected={new Date(values.birthday)}\n                          onChange={date => {\n                            setFieldValue('birthday', date);\n                            //   format(date, 'yyyy-MM-dd')\n                            // ); // Log the selected date\n                          }}\n                          dateFormat=\"yyyy-MM-dd\"\n                        />\n                      </CalendarGlobalStyles>\n                    </>\n                  )}\n                </Field>\n\n                <ErrorMessageStyled\n                  name=\"birthday\"\n                  component=\"div\"\n                  className=\"error-message\"\n                />\n              </FormField>\n\n              <FormField\n                error={errors.email}\n                valid={touched.email && !errors.email}\n              >\n                <label htmlFor=\"email\">Email</label>\n                <Field\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  className={\n                    errors.email && touched.email\n                      ? 'error'\n                      : touched.email && !errors.email\n                      ? 'valid'\n                      : ''\n                  }\n                />\n                <ErrorMessageStyled\n                  name=\"email\"\n                  component=\"div\"\n                  className=\"error-message\"\n                />\n              </FormField>\n\n              <FormField\n                error={errors.phone}\n                valid={touched.phone && !errors.phone}\n              >\n                <label htmlFor=\"phone\">Phone</label>\n                <Field\n                  type=\"text\"\n                  name=\"phone\"\n                  id=\"phone\"\n                  className={\n                    errors.phone && touched.phone\n                      ? 'error'\n                      : touched.phone && !errors.phone\n                      ? 'valid'\n                      : ''\n                  }\n                />\n                <ErrorMessageStyled\n                  name=\"phone\"\n                  component=\"div\"\n                  className=\"error-message\"\n                />\n              </FormField>\n\n              <FormField\n                error={errors.skype}\n                valid={touched.skype && !errors.skype}\n              >\n                <label htmlFor=\"skype\">Skype</label>\n                <Field\n                  type=\"text\"\n                  name=\"skype\"\n                  id=\"skype\"\n                  className={\n                    errors.skype && touched.skype\n                      ? 'error'\n                      : touched.skype && !errors.skype\n                      ? 'valid'\n                      : ''\n                  }\n                />\n                <ErrorMessageStyled\n                  name=\"skype\"\n                  component=\"div\"\n                  className=\"error-message\"\n                />\n              </FormField>\n              <div className=\"spacer\"></div>\n\n              <AccountSaveButton type=\"submit\">Save changes</AccountSaveButton>\n            </FormTextInputs>\n          </StyledForm>\n        )}\n      </Formik>\n    </AccountPageContainer>\n  );\n};\n\nexport default AccountPageLayout;\n","import React from 'react';\nimport AccountPageLayout from 'components/AccountPage/AccountPageLayout';\n\nexport default function AccountPage() {\n  return <AccountPageLayout />;\n}\n"],"names":["AccountPageContainer","styled","AccountPageAvatar","UserAvatarPlus","AccountAvatarPlusIcon","AccountUserName","AccountUserNameTitle","AccountUserNameRole","StyledForm","Form","FormTextInputs","FormField","props","valid","error","AccountSaveButton","primaryColor","whiteColor","ErrorMessageStyled","ErrorMessage","CalendarGlobalStyles","userValidationSchema","Yup","shape","username","required","email","matches","birthday","phone","skype","user","useSelector","state","auth","dispatch","useDispatch","useState","formattedBirthday","setFormattedBirthday","useEffect","editTitle","formatted","format","parseISO","initialValues","file","Date","validationSchema","onSubmit","values","actions","formData","FormData","append","avatarURL","defaultAvatarBlob","Blob","defaultProfileAvatar","type","authOperations","errors","touched","setFieldValue","className","id","style","display","onChange","event","currentTarget","files","htmlFor","alt","src","URL","createObjectURL","userAvatarPlusIcon","name","component","field","calendarStartDay","selected","date","dateFormat","AccountPage"],"sourceRoot":""}